{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","data","setUpdateFlag","state","posts","fetch","then","response","json","setState","setInterval","pointUpdate","rankSort","forceUpdate","i","this","length","Math","floor","random","j","temp","undefined","dataUpdate","MainDivItem","className","map","post","GroupStyleItem","CardBodyStyleItem","id","ImgStyleItem","src","picture","displayName","score","userID","Component","styled","div","img","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAIMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,KAAO,GACZ,EAAKC,eAAgB,EACrB,EAAKC,MAAQ,CACXC,MAAO,IALQ,E,qDAQnB,WAAqB,IAAD,OAElBC,MADY,sDAEXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAAEL,MAAOI,S,wBAEvC,WAAa,IAAD,OACVE,aAAa,WACX,EAAKC,cACL,EAAKC,WACL,EAAKC,gBACH,O,yBAEN,WACE,IAAI,IAAIC,EAAI,EAAGA,EAAIC,KAAKd,KAAKe,OAAQF,IACnCC,KAAKd,KAAKa,GAAV,MAAwBC,KAAKd,KAAKa,GAAV,MAAwBG,KAAKC,MAAuB,IAAhBD,KAAKE,Y,sBAGrE,WACE,IAAI,IAAIL,EAAI,EAAGA,EAAIC,KAAKd,KAAKe,OAAQF,IACnC,IAAI,IAAIM,EAAI,EAAGA,EAAIL,KAAKd,KAAKe,OAAS,EAAIF,EAAGM,IAC3C,GAAGL,KAAKd,KAAKmB,EAAI,GAAd,MAA4BL,KAAKd,KAAKmB,GAAV,MAAsB,CACnD,IAAIC,EACJA,EAAON,KAAKd,KAAKmB,GACjBL,KAAKd,KAAKmB,GAAKL,KAAKd,KAAKmB,EAAI,GAC7BL,KAAKd,KAAKmB,EAAI,GAAKC,K,oBAK3B,WACE,IAAQjB,EAAUW,KAAKZ,MAAfC,MAQR,OAPGW,KAAKb,oBACUoB,IAAblB,EAAM,KACPW,KAAKd,KAAOG,EACZW,KAAKQ,aACLR,KAAKb,eAAgB,GAIvB,cAACsB,EAAD,CAAaC,UAAU,YAAvB,SACGV,KAAKd,KAAKyB,KAAI,SAACC,GAAD,OACb,qBAAKF,UAAU,OAAf,SACE,eAACG,EAAD,WACE,eAACC,EAAD,CAAmBJ,UAAU,YAA7B,UACE,8BAAME,EAAKG,KACX,8BAAK,cAACC,EAAD,CAAcC,IAAKL,EAAKM,YAF/B,OAGE,8BAAMN,EAAKO,iBAEb,gCAAMP,EAAKQ,MAAX,QANF,mBADyBR,EAAKS,iB,GAnD1BC,aAmEZb,EAAcc,IAAOC,IAAV,mEAKXR,EAAeO,IAAOE,IAAV,2FAMZZ,EAAiBU,IAAOC,IAAV,qGAMdV,EAAoBS,IAAOC,IAAV,qGAMRxC,IClFA0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f0919787.chunk.js","sourcesContent":["import './App.css';\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.data = [];\n      this.setUpdateFlag = true;\n      this.state = {\n        posts: []\n      }\n    }\n    componentDidMount() {\n      const url = \"https://webcdn.17app.co/campaign/pretest/data.json\";\n      fetch(url)\n      .then(response => response.json())\n      .then(json => this.setState({ posts: json }))\n    }\n    dataUpdate(){\n      setInterval( () => {\n        this.pointUpdate();\n        this.rankSort();\n        this.forceUpdate();\n      } , 1000);\n    }\n    pointUpdate(){\n      for(let i = 0; i < this.data.length; i++){\n        this.data[i]['score'] = this.data[i]['score'] + Math.floor( Math.random() * 1000 );\n      }\n    }\n    rankSort(){\n      for(let i = 0; i < this.data.length; i++){\n        for(let j = 0; j < this.data.length - 1 - i; j++){\n          if(this.data[j + 1]['score'] > this.data[j]['score']){\n            let temp;\n            temp = this.data[j];\n            this.data[j] = this.data[j + 1];\n            this.data[j + 1] = temp;\n          }\n        }\n      }\n    }\n    render() {\n      const { posts } = this.state;\n      if(this.setUpdateFlag){\n        if(posts[0] !== undefined){\n          this.data = posts;\n          this.dataUpdate();\n          this.setUpdateFlag = false;\n        }\n      }    \n      return (\n        <MainDivItem className=\"container\">\n          {this.data.map((post) => (\n            <div className=\"card\" key={post.userID}>\n              <GroupStyleItem>\n                <CardBodyStyleItem className=\"card-body\">\n                  <div>{post.id}</div>\n                  <div><ImgStyleItem src={post.picture}></ImgStyleItem></div>&nbsp;\n                  <div>{post.displayName}</div> \n                </CardBodyStyleItem>\n                <div>{post.score}pt</div>&nbsp;&nbsp;&nbsp;\n              </GroupStyleItem>\n            </div>\n          ))}\n        </MainDivItem>\n      );\n    }\n}\n\nconst MainDivItem = styled.div`\n    width: 30rem;\n    weight: 30rem;\n`;\n\nconst ImgStyleItem = styled.img`\n    width: 3rem;\n    weight: 3rem;\n    border-radius: 3rem;\n`;\n\nconst GroupStyleItem = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center; \n`;\n\nconst CardBodyStyleItem = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center; \n`;\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}